
PHP 可以接受到任何来自于兼容 RFC-1867 规范的浏览器上传的文件。
PHP 也支持 PUT 方法上传文件，Netscape Composer 和 W3C 的 Amaya 客户端就使用了 PUT 方法。

MAX_FILE_SIZE 隐藏域（单位为字节）必须位于文件输入域的前面，并且它的 value 属性值接收的文件的最大尺寸。
应当总是使用这个表单元素，因为它可以防止用户陷入“一直长时间等着大文件的上传成功，到最后却发现该文件过大而且上传失败了”的麻烦中。
请谨记，在浏览器端可以非常容易的就绕过该设置，所以不要指望通过该属性就能屏蔽大文件的上传。该属性仅仅是提供给应用程序客户端中的用户的一个惯例特性而已。
然而，PHP 用于限制最大尺寸的（服务端）设置不可能被绕过。

注意
    确保上传文件的表单拥有属性 enctype="multipart/form-data"，否者文件不会上传。

全局的 $_FILES 变量会包含所有的上传信息。
    $_FILES['field_name']['name']
        文件在客户端机器中原来的名字。
    $_FILES['field_name']['type']
        文件的 MIME 类型（如果浏览器提供该信息的话）。然而在 PHP 端并不会检查该 MIME 类型，所以为了以防万一，别使用或者相信它的值。
        总结就是，该值可能存在，也可能不存在；而且就算存在，其值也不是可信的。
    $_FILES['field_name']['size']
        上传的文件的大小，单位为字节。
    $_FILES['field_name']['tmp_name']
        文件被上传到服务器端后的临时文件名。
    $_FILES['field_name']['error']
        和该次文件上传相关的错误代码。

