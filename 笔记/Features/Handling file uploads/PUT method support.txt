PHP 提供了对 HTTP PUT 方法的支持，一些客户端使用该方法往服务器中存放文件。相比于使用 POST 请求上传文件来说 PUT 请求更加的简单。它看起来像
这样：
    PUT /path/filename.html HTTP/1.1

这通常意味着远程的客户端希望将内容保存为 web 树中的 /path/filename.html 。然而对于 Apache 和 PHP 来说，让任何人可以自动的覆盖 web 树中
的任意文件显然不是什么好主意。因此，想要处理这样的一个请求，你必须先告诉你的服务器你想让一个特定的 PHP 脚本来处理这样的请求。在 Apache 中可
以用 Script 指令来达到该目的。该指令几乎可以放到 Apache 配置文件中的任何位置。一个常见的位置是在 <Directory> 块中，或者也可能是在一个
<VirtualHost> 块中。可以用如下一行来完成该设置：
    Script PUT /put.php

这告诉 Apache 把所有与放置这一行的上下文相匹配的 URIs 的 PUT 请求都发送给 put.php 脚本。当然，这是建立在 PHP 启用了对 .php 扩展名的支持
并且 PHP 已经激活的假设之上。发送给该脚本的 PUT 请求的目标资源都是脚本本身，上传的文件不应该有文件名。

使用 PHP，你将在你的 put.php 中执行如下操作。这将把上传文件的内容复制到服务器上的文件 myputfile.ext 中。在执行此文件的复制之前，你可能会
想执行一些检查和/或对用户进行身份认证。

Example #1 保存 HTTP PUT 文件
    <?php
    /* PUT data comes in on the stdin stream */
    $putdata = fopen("php://input", "r");

    /* Open a file for writing */
    $fp = fopen("myputfile.ext", "w");

    /* Read the data 1 KB at a time and write to the file */
    while ($data = fread($putdata, 1024))
      fwrite($fp, $data);

    /* Close the streams */
    fclose($fp);
    fclose($putdata);
    ?>
