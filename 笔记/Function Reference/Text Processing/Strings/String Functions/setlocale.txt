描述
    setlocale ( int $category , string $locale [, string $... ] ) : string
    setlocale ( int $category , array $locale ) : string

    设置区域信息。

    警告 区域信息是由每个进程而不是每个线程维护的。如果你正在一个多线程服务器 API 上运行 PHP ，在一个脚本运行时，你可能会遇到区域设置突然发
    生变化的情况，即使该脚本自身从没调用过 setlocale() 。会发生这种情况。是因为同时运行在同一进程下的不同线程中的其他脚本使用 setlocale()
    更改了进程范围的区域。在 Windows 平台上，从 PHP 5.6.20 和 PHP 7.0.5 开始，区域信息是由每个线程维护的。

参数
    category
        category 是一个命名常量，指定了受此区域设置影响的功能的类别：
            LC_ALL 针对下面所有
            LC_COLLATE 针对字符串比较，见 strcoll()
            LC_CTYPE 针对字符分类和转换，例如 strtoupper()
            LC_MONETARY 针对 localeconv()
            LC_NUMERIC 针对十进制分隔符 （也请参见 localeconv()）
            LC_TIME 针对 strftime() 的日期和时间的格式化
            LC_MESSAGES 针对系统响应 （如果 PHP 被编译带有 libintl，则可用）
    locale
        如果 locale 是 NULL 或者空字符串 ""，那么区域名将从与上述类别名称相同的环境变量的值或从 "LANG" 中设置。

        如果 locale 是 "0" ，不会影响区域设置，只会返回当前的设置。

        如果 locale 是一个数组或后面跟有额外的参数，则尝试将每个数组元素或参数设置为新的 locale，直到成功为止。如果已知某个区域在不同的系
        统上会在不同的名称下，或者为一个可能不可用的区域提供一个后备，这是很有用的。

    ...
        可选的字符串或数组参数，会被尝试作为区域设置，直到成功为止。

    注意：在 Windows 平台上，setlocale(LC_ALL, '') 会从系统的区域/语言设置（可从控制面板访问）中设置区域名称。

返回值
    返回新的当前区域，如果在你的平台上没有实现此区域功能、指定的区域不存在或类别名是无效的，则返回 FALSE 。

    一个无效的类别名也会导致一个警告消息。类别/地区名称可以在 RFC 1766 和 ISO 639 中找到。不同的系统对地区有不同的命名方案。

    注意：setlocale() 的返回值取决于运行 PHP 的系统。它返回的正是系统 setlocale 函数返回的内容。

变更日志
    版本         描述
    7.0.0	    对可以想 category 参数传递一个字符串的支持被移除了。从这个版本开始，只能使用 LC_* 常量。
    5.3.0	    如果传递给 category 参数的是一个字符串而不是一个 LC_* 常量，此函数现在会抛出一个 E_DEPRECATED 通知。

注意事项
    提示 Windows 用户可以在微软的 MSDN 网站上找到关于 locale 字符串的有用信息。支持的语言字符串可以在 语言字符串文档 中找到，支持的
    国家/地区字符串可以在 国家/地区字符串文档 中找到。
