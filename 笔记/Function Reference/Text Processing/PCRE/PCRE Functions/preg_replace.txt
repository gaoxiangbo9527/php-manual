描述
    preg_replace ( string|array $pattern , string|array $replacement , string|array $subject [, int $limit = -1 [, int &$count = NULL ]] ) : string|array|null

    搜索 subject 去匹配 pattern 并使用 replacement 替换它们。

参数
    pattern
        要搜索的模式。它可以是一个字符串或者一个字符串数组。

        也可以使用一些 PCRE 修饰符。
    replacement
        用于替换的字符串或者字符串数组。如果这个参数是一个字符串并且 pattern 参数是一个数组，那么所有的模式都将被这个字符串替换。如果
        pattern 和 replacement 参数都是数组，每个 pattern 将会被对应的 replacement 所替换。如果 replacement 数组的元素个数比
        pattern 数组少，任何多出的 pattern 都将被空字符串替换。

        replacement 可以包含 \n 或 $n 形式的引用，后面这种是首选的形式。每个这样的引用都将会被第 n 个圆括号内的模式所捕获的文本所替换。n
        可以从 0 到 99，并且 \0 或 $0 引用的是由整个模式所匹配的文本。开始圆括号是从左到右计数的（从 1 开始），以获取捕获子模式的数量。注
        意，字符串字面中的反斜杠可能需要转义。

        当使用一个替换模式时，如果一个反向引用后面立即跟着另一个数组（例如：在一个被匹配的模式后面立即跟着一个字面数字），你不能对反向引用使
        用熟悉的 \1 表示法，例如 \11 将会使 preg_replace() 困惑，因为它不知道。因为它不知道你是想要 \1 后接字面字符 1，还是 \11 后什么
        都不接。在这种情况下，解决方法是使用 ${1}1。这创建了一个独立的 $1 反向引用，将 1 保留为一个字面字符。

        当使用一个被废弃的 e 修饰符时...。个人补充：因为这个修饰符已经被移除了，所以就不翻译了。

    subject
        要搜索和替换的字符串或字符串数组。

        如果 subject 是一个数组，那么搜索和替换会在 subject 的每条记录上执行，并且返回值也会是一个数组。
    limit
        在每个 subject 字符串中每个模式可能的最大替换次数。默认为 -1（无限制）。
    count
        如果指定，则将用完成的替换次数填充该变量。

返回值
    如果 subject 参数是一个数组，那么 preg_replace() 会返回一个数组，否则返回一个字符串。

    如果找到了匹配项，将会返回新的 subject，否则 subject 会被返回且保持不变，如果发生一个错误，则返回 NULL。

错误/异常
    从 PHP 5.5.0 开始，当传递一个 \e 修饰符时会产生 E_DEPRECATED 级别的错误。从 PHP 7.0.0 开始，使用 \e 修饰符是一个错误；在这种情况下
    会产生一个 W_WARNING。

注意事项
    注意：当对 pattern 和 replacement 使用数组时，键是按照它们出现在数组中的顺序被处理的。这并不一定要与数字索引顺序相同。如果你使用索引去
    标识哪个 pattern 应该被哪个 replacement 替换，在调用 preg_replace() 之前，你应该在每个数组上执行一次 ksort()。
