描述
    mt_rand ( void ) : int
    mt_rand ( int $min , int $max ) : int

    小心 此函数不会生成加密安全的值并且不应该用于加密目的。如果你需要一个加密安全的值，可以考虑使用 random_int()、random_bytes() 或
    openssl_random_pseudo_bytes()。

    许多旧的 libc 随机数生成器具有可疑的或未知的特征并且速度很慢。mt_rand() 函数是对旧的 rand() 的临时替换。它使用了一个具有已知特征的随
    机数生成器，使用了 Mersenne Twister，这将比 libc rand() 提供的平均速度快 4 倍。

    如果没有使用可选的 min，max 参数调用，mt_rand() 返回 0 到 mt_getrandmax() 之间的一个伪随机整数。如果你想要一个 5 到 15 之间（包含
    ）的随机数，例如，使用 mt_rand(5, 15)。

参数
    min
        可选的，会返回的最低值（默认：0）。
    max
        可选的，会返回的最大值（默认：getrandmax()）。

返回值
    一个在 min（或 0） 到 max（或 mt_getrandmax()，包含） 之间的随机整数值，或者 FALSE，如果 max 小于 min 的话。

更新日志
    Version	Description
    7.2.0	mt_rand() 收到了一个针对模偏问题的错误修正。这意味着使用一个特定种子生成的序列可能与 64 位机器上的 PHP 7.1 不同。
    7.1.0	rand() 成为了 mt rand() 的别名。
    7.1.0	mt_rand() 已被更新，以使用固定、正确版本的 Mersenne Twister 算法。要回退到原来的行为，可以使用 mt_srand()，并将
            MT_RAND_PHP 作为第二个参数。
    5.3.4	如果 max < min，发出 E_WARNING 并返回 FALSEI。

注意事项
    警告 min max 范围必须在 mt_getrandmax() 范围内。即 (max - min) <= mt_getrandmax()。否则，mt_rand() 可能会返回低质量的随机数。
