描述
    unserialize ( string $str [, array $options ] ) : mixed
    unserialize() 接受一个已序列化的变量（字符串）并将它转换回一个 PHP 值。

    警告
        不论 options 参数的 allowed_classes 选项的值是什么，都不要把不可信的用户输入传给 unserialize() 函数；由于对象的实例化和自动加载，
        反序列化可能会导致代码被加载和执行，而这可能会被恶意用户利用。
        如果你需要传递序列化后的数据给用户，请使用一种安全的、标准的数据交换格式，比如 JSON （通过 json_decode() 和 json_encode()）。
        （个人补充，上面说的比较清楚了，如果是要在用户和代码之间序列化和反序列化，可以使用 JSON 这种数据交换格式；而如果要在代码和非用户之间序列化
        和反序列化，则可以使用 PHP 自己的序列化和反序列化函数）
        如果你需要反序列化存储在外部的已序列化数据，可以考虑使用 hash_hmac() 进行数据验证，从而确保数据没有被除你之外的其他人修改过。
参数
    str
        已序列化的字符串。

        如果被反序列化的变量是一个对象，在成功的重建该对象之后 PHP 会尝试调用 __wakeup() 方法（如果它存在的话）。

        注意：unserialize_callback_func 指令
            能够设置一个回调函数，在反序列化期间，被实例化的类是一个未定义的类时，会调用该回调函数（从而防止得到一个不完整的对象
            __PHP_Incomplete_Class ）。使用你的 php.ini、 ini_set() 或者 .htaccess 去定义 unserialize_callback_func 。
            每次将要实例化的类是未定义的类时都会调用该回调函数。要禁止这个特性，只需置空此设置项即可。
            （个人补充：该指令指定的函数的用途就是在其中加载或者定义需要的类，如果该函数不存在或没有加载成功或定义需要的类，此时，会报 E_WARNING
             错误，且仍会返回 __PHP_Incomplete_Class 类型的对象。）
    options
        要提供给 unserialize() 的所有选项，使用关联数组形式。

        有效的选项
            名称                 类型         描述
            allowed_classes     mixed       要么是一个会被接受的类名的数组，false 表示不接受任何类，或者是 true 去接受所有的类。
                                            如果定义了该选项，并且 unserialize() 遇到了一个不被接受的类的对象，那么这个对象将被实例化为
                                            __PHP_Incomplete_Class 的对象。
                                            省略本选项同定义它为 true 时相同，PHP 会尝试去实例化任何类的对象。
返回值
    返回转换后的值，可能是布尔值、整数、浮点数、字符串、数组和对象。
    如果传递的 str 参数不可反序列化，那么会返回 false ，并且会产生 E_NOTICE 。
变更日志
    版本         描述
    7.1.0       options 的 allowed_classes 元素现在是严格类型的，比如，如果指定布尔值值或者数组以外的任何事物，unserialize() 返回 false
                并且产生 E_WARNING 错误。
    7.0.0       options 参数被添加
    5.6.0       通过将C:替换为O:来强制对象实例化而不调用构造函数去操作序列化的数据现在将失败。

注释
    警告：在发生错误或者反序列化后得到的值本身就是 false 值时，unserialize() 函数均会返回 false （这也就意味着，当
    unserialize() 函数返回 false 时，你无法直接判断到底是哪种情况）；此时，你可以尝试通过捕获 E_NOTICE 或者 通过比较
    str 和 serialize(false) 的值来判断到底是哪种情况发生了。
