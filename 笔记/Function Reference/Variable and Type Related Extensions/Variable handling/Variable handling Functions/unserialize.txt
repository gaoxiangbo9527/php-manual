描述
    mixed unserialize ( string $str [, array $options ] )

    接受一个已序列化的变量（字符串）并且将它转换回一个 PHP 值。

    警告
        在没有指定 options 参数的 allowed_classes 选项值时，不要把不可信的用户输入传给 unserialize() 函数；是因为
        unserialize() 可能会进行对象的实例化和自动加载，从而导致代码被加载和执行，而这可能会被恶意用户利用。如果你需要
        传递序列化后的数据给用户，请使用一种安全的、标准的数据交换格式，比如 JSON 。

        如果你需要反序列化存储在外部的已序列化数据，可以考虑使用 hash_hmac() 进行数据验证，从而确保数据没有被除你之外的
        其他人修改过。
参数
    str
        被序列化的字符串。

        如果被反序列化的变量是一个对象，在成功的结构该对象之后 PHP 会尝试调用 __wakeup() 方法（如果存在的话）。

        注意：unserialize_callback_func 指令
            该指令会设置一个回调函数，在反序列化时，被实例化的类是一个未定义的类时，会调用该回调函数（从而阻止得到一个不完
            整的对象 __PHP_Incomplete_Class ）。使用你的 php.ini、 ini_set() 或者 .htaccess 都可以设置该指令。
            每次将要实例化的类是未定义的类时都会调用该回调函数。若要禁止这个特性，只需置空此设置项即可。
            该指令指定的函数的用途就是在其中加载或者定义需要的类，如果该函数没有加载成功或者定义需要的类，此时，会报
            E_WARNING 错误。
    options
        要传递给 unserialize() 函数的所有选项，使用关联数组形式。
        PHP 7.0.0 加入了该参数。

        有效的选项
            allowed_classes
                mixed 可以接收的类型有：
                    true
                        表示接受任何的类。
                    false
                        表示不接受任何的类。
                    类名数组
                        表示被接受的类名的列表。
                    从 PHP 7.1.0 开始，如果传递给本选项的值不是 bool 值或者数组，本函数就会返回 false ，并且会抛出
                    E_WARNING 错误。

                省略本选项相当于指定选项值为 true 时的情况，PHP 会尝试去实例化任何类的实例。
                如果指定了本选项且 unserialize() 函数遇到了不被接受的类的对象，那么最终这个对象会被实例化为类
                __PHP_Incomplete_Class 的对象。

返回值
    返回转换后的值，可能是布尔值、整数、浮点数、字符串、数组和对象。
    如果传递的 str 参数不可反序列化，那么会返回 false ，并且会产生 E_NOTICE 。
注释
    警告：在发生错误或者反序列化后得到的值本身就是 false 值时，unserialize() 函数均会返回 false （这也就意味着，当
    unserialize() 函数返回 false 时，你无法直接判断到底是哪种情况）；此时，你可以尝试通过捕获 E_NOTICE 或者 通过比较
    str 和 serialize(false) 的值来判断到底是哪种情况发生了。