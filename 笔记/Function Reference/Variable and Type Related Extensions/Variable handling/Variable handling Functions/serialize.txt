描述
    string serialize ( mixed $value )

    生成某个值的一种可存储的形式（的字符串）。
    这在存储或传递 PHP 值时很有用，而且还不会丢失它们的类型和结构。
参数
    value
        除了资源类型外，可以使用任何类型的数据。
        你正在序列化的对象或者数组中的循环引用也会被序列化，其它的任何引用都会丢失。
        （个人补充）上面两条的特殊情况其实很好理解，引用在反序列化时很难解析回来。
        （个人猜测）方法也和资源类型一样，都是引用，所以序列化时也不会序列化方法。

        如果要序列化的数值是一个对象，那么在序列化开始之前会尝试调用该对象的成员方法 __sleep()，这可以让对象在序列化之前
        进行最后一次清理（一般用于去除不需要或者不希望被序列化的内容）；相对应的，当使用 unserialize() 函数恢复对象后，
        会调用 __wakeup() 方法。

        注意：
            对象的私有成员在序列化时，会在该私有成员名前面加上类名作为前缀；
            对象的保护成员在序列化时，会在该保护成员名前面加上 * 作为前缀；
            这些前缀值的两侧都会有一个空字节，即 \0。
返回值
    返回 value 参数值对应的字节流形式的字符串。
    因为返回的是字节流字符串，其中很可能包含空字节，所以必须按照处理字节流字符串的方式去处理返回值，例如在把 serialize()
    函数的返回值存储到数据库中时，需要存放到 BLOB 类型的字段中，而不能存放到 text 或 char 类型的字段中。
注意
    很多内置的 PHP 对象不能被序列化，然而实现了 Serialize 接口或 __sleep() 和 __wakeup() 魔术方法的对象却是具备被
    序列化能力的。如果一个内置类不满足上述两个条件中的任何一个，则其序列化的结果是不可信的。
    由于历史原因，上述规则有一些列外；有一些内置的对象不需要实现 Serialize 接口或暴露魔术方法就可以被序列化，尤其是 PHP
    5.2.0 以前的 ArrayObject 。
警告
    当序列化对象时，对于在某个命名空间下的类，为了最大的兼容性，类名中不会包含开头的反斜线。