PHP 的会话支持由在跨越后续访问中保存特定数据的方式组成。

一个访问你的网站的访问者被分配一个唯一的 id，即所谓的会话 id。这要么存储在用户端的一个 cookie 中，要么在一个 URL 中传播。

会话支持允许你在 $_SESSION 超全局数组中存储请求之间的数据。当一个访问者访问你的站点时，PHP 将自动的（如果 session.auto_start 设置为 1）
或按照你的请求（显式的通过 session_start()）去检查是否与请求一起发送了某个特定的会话 id。如果是这种情况，将重新创建之前保存的环境。

小心 如果你开启了 session.auto_start，那么把对象放置到你的会话中的唯一方法是使用 auto_prepend_file 去加载其类定义。要么在其中加载类定义
，否则，你就必须 serialize() 你的对象，并且后面在 unserialize() 它。

$_SESSION（和所有已注册的变量）由 PHP 在内部使用由 session.serialize_handler ini 设置项指定的序列化处理程序进行序列化，在请求完成之后。
未定义的已注册变量被标记为未定义。在后续访问中，除非用户稍后定义它们，否则会话模块不会定义它们。

警告
    因为会话数据是被序列化的，所以 资源 变量不能存储在会话中。

    序列化处理程序（php 和 php_binary）继承 register_globals 限制。因此，不能使用数字索引或包含特殊字符（| 和 !）的字符串索引。使用这些
    将导致脚本关闭时出现错误。php_serialize 没有这样的限制。php_serialize 从 PHP 5.5.4 开始可用。

注意：当和会话一起工作时请注意，直到使用 session_register() 函数或通过向 $_SESSION 超全局数组添加了一个新的键去注册了一个变量，才会创建一
个会话的记录。无论会话是否已经使用 session_start() 函数启动，这都是正确的。

注意：PHP 5.2.2 引入了一个未文档化的特性，可以在 "/tmp" 中存储会话文件，即使启用了 open_basedir 且 "/tmp" 没有被显式的添加到允许的路径
列表中。从 PHP 5.3.0 开始，该特性已经从 PHP 中移除了。
