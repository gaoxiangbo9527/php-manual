描述
    eval ( string $code ) : mixed

    以 PHP 计算给定的代码。

    小心 该 eval() 语言结构是非常危险的，因为它允许执行任意的 PHP 代码。因此不推荐使用它。如果你已经仔细验证过除了使用这个结构之外没有其他
    的选择了，那么请特别注意，不要在没进行正确的验证之前将任何用户提供的数据传递给它。

参数
    code
        待计算的有效的 PHP 代码。

        代码一定不能包裹在开始和结束 PHP 标签中，例如，必须传递 'echo "Hi!";' 而不能传递 '<?php echo "Hi!"; ?>' 。通过使用适当的 PHP
        标记，仍然可以离开和重新进入 PHP 模式，例如 'echo "In PHP mode!"; ?>In HTML mode!<?php echo "Back in PHP mode!";' 。

        除此之外，传递的代码必须是有效的 PHP 。这包括所有语句必须使用分号正确的结束。例如 'echo "Hi!"' 将会引起一个解析错误，而
        'echo "Hi!";' 却可以工作。

        一条 return 语句将会立即终止该代码的执行。

        该代码将会在调用 eval() 的代码的作用域中被执行。因此任何在该 eval() 调用中定义或更改的变量在其终止后将仍然保持可见。

返回值
    eval() 会返回 NULL，除非在被执行的代码中调用了 return ，这种情况下传递给 return 的值将会被返回。从 PHP 7 开始，如果在被执行的代码中
    有一个解析错误，那么 eval() 将会抛出一个 ParseError 异常。在 PHP 7 之前，这种情况 eval() 会返回 FALSE 并且会继续正常的执行后续的
    代码。使用 set_error_handler() 无法在 eval() 中捕获解析错误。

注意事项
    注意：因为这是一个语言结构而不是一个函数，所以不能使用 变量函数 调用它。

    提示 与任何会直接输出其结果到浏览器的事物一样，输出控制函数 可以用于去捕获此函数的输出，并且将其保存到一个字符串（例如）中。

    注意：如果被计算的代码中出现一个致命错误，那么整个脚本将会退出。
