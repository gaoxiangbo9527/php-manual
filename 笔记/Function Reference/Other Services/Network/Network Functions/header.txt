描述
    header ( string $header [, bool $replace = TRUE [, int $http_response_code ]] ) : void

    header() 用于发送一个生的 HTTP 头。关于 HTTP 头的更多信息，见 HTTP/1.1 规范 。

    记住，header() 必须在实际的输出被普通的 HTML 标记、文件中的空行或 PHP 发送之前调用。使用 include、require、函数或另一个文件访问函数
    读取代码，且拥有会在调用 header() 之前输出的空格或空行，这是一种非常常见的错误。使用单个 PHP/HTML 文件时也存在同样的问题。

    <html>
    <?php
    /* 这将给出一个错误。注意上面的输出，它是在 header() 调用前面的。*/
    header('Location: http://www.example.com/');
    exit;
    ?>

参数
    header
        头部字符串。

        有两种特殊情况的头部调用。第一种是以字符串 "HTTP/"（大小写不重要）开头的头部，它将用于确定要发送的 HTTP 状态码。例如，如果你已将
        Apache 配置为使用 PHP 脚本去处理缺失文件的请求（使用 ErrorDocument 指令），你可能希望确保脚本生成正确的状态码。

        <?php
        header("HTTP/1.0 404 Not Found");
        ?>

        第二种特殊情况是 "Location:" 头部。它不仅把这个头部信息发送回浏览器，它还会返回一个 REDIRECT（302）状态码到浏览器，除非已经设置
        了 201 或 3xx 状态码。

        <?php
        header("Location: http://www.example.com/"); /* 重定向浏览器 */

        /* 确保在我们重定向时下面的代码不会被执行 */
        exit;
        ?>
    replace
        可选的 replace 参数指示是否该头部应该替换以前的类似头部，还是添加相同类型的第二个头部。默认它将进行替换，但是如果你传进 FALSE 作为
        第二个参数，你可以强制使用相同类型的多个头部。例如：

        <?php
        header('WWW-Authenticate: Negotiate');
        header('WWW-Authenticate: NTLM', false);
        ?>
    http_response_code
        强制 HTTP 响应代码为指定值。注意，这个参数只在 header 不为空的情况下才有效果。

返回值
    没有值会被返回。

更新日志
    版本	    描述
    5.1.2	这个函数现在可以阻止一次发送多个头部，作为一种避免头部注入攻击的保护措施。

注意事项
    注意：只有使用的 SAPI 支持头部时，才可以访问和输出头部。

    注意：你可以使用输出缓冲在调用此函数之前发送输出，这会具有所有你输出到浏览器的内容都会被缓冲在服务器中的开销，直到你发送它。你可以通过在脚
    本中调用 ob_start() 和 ob_end_flush() 或者在 php.ini 或服务器配置文件中设置 output_buffering 配置指令来实现这一点。

    注意：无论实际的 header() 调用是否是第一个调用，HTTP status 头行始终是第一个发送给客户端的行。除非 HTTP 头已经被发送，否则任何时候都
    可以通过使用新的状态行调用 header() 来覆盖状态。

    注意：在微软的 Internet Explorer 4.01 中有一个错误阻止了 header() 正常工作。没有解决办法。微软 Internet Explorer 5.5 中还有一个
    干扰此问题的 bug，可以通过升级到 Service Pack 2 或更高版本来解决。

    注意：如果启用了 安全模式，脚本的 uid 将被添加到 WWW-Authenticate 头的 realm 部分，如果你设置了这个头（用于 HTTP 身份验证）。

    注意：大多数当代客户端接受相对 URL 作为 Location 的参数，但是一些较老的客户端需要包含方案、主机名和绝对路径的绝对 URI。
        <?php
        /* Redirect to a different page in the current directory that was requested */
        $host  = $_SERVER['HTTP_HOST'];
        $uri   = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');
        $extra = 'mypage.php';
        header("Location: http://$host$uri/$extra");
        exit;
        ?>

    注意：会话 ID 不会与 Location 头一起被传递，即使启用了 session.use_trans_sid。它必须手动的使用 SID 常量传递。你通常可以自行使用
    $_SERVER['HTTP_HOST']，$_SERVER['PHP_SELF'] 和 dirname() 从一个相对 URI 中创建一个绝对 URI：

