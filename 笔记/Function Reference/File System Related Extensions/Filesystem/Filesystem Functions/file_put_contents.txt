描述
    file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] ) : int

    这个函数等于连续的调用 fopen()、fwrite() 和 fclose() 写入数据到一个文件。

    如果 filename 不存在，则创建该文件。否则，会覆盖已存在的文件，除非设置了 FILE_APPEND 标志。

参数
    filename
        要写入数据的文件的路径。
    data
        要写入的输一局。可以是一个字符串，一个数组或一个流资源。

        如果 data 是一个流资源，该流的剩余缓冲将被复制到指定的文件。这类似于使用 stream_copy_to_stream() 。

        你还能将 data 参数指定为一个一维数组。这相当于 file_put_contents($filename, implode('', $array)) 。
    flags
        flags 的值可以是下列标志的任意组合，并与二进制 OR（|）操作符 连接。

        可用的标志
        标志	                    描述
        FILE_USE_INCLUDE_PATH	在包含目录中搜索 filename 。更多信息见 include_path 。
        FILE_APPEND	            如果文件 filename 已经存在，则追加数据到该文件，而不是覆盖它。
        LOCK_EX	                当进行写入操作时，在文件上获取一个排他锁。换句话说，在 fopen() 调用和 fwrite() 调用之间发生了一个
                                flock() 调用。这与模式为"x"的 fopen() 调用不同。
    context
        使用 stream_context_create() 创建的一个有效的上下文资源。

返回值
    这个函数返回写入文件的字节数，失败时返回 FALSE 。

    警告 此函数可能返回布尔值 FALSE ，但也可能返回计算结果为 FALSE 的非布尔值。请阅读 布尔值 部分以获得更多信息。使用 === 操作符测试此函
    数的返回值。

更新日志
    版本	    描述
    5.1.0	添加了对 LOCK_EX 和将一个流资源传递给 data 参数的能力的支持。

注意事项
    注意：这个函数是二进制安全的。

    提示
        如果启用了 fopen 包装器，则通过此函数可以以 URL 作为文件名。有关如何指定文件名的详细信息，请参阅 fopen() 。请参阅 受支持的协议和
        包装器 以获得有关各种包装器具有什么功能的信息的链接、它们的用法说明以及它们可能提供的任何预定义变量的信息。
