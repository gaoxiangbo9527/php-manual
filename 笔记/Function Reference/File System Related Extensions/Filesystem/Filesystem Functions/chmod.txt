描述
    chmod ( string $filename , int $mode ) : bool

    尝试将指定文件的权限更改为给定的 mode 。

参数
    filename
        文件的路径。
    mode
        注意，mode 不会自动假定为八进制值，所以为了确保预期的操作，你需要在 mode 前添加一个 0 ，像"g+w"这样的字符串无法正常工作。
            <?php
            chmod("/somedir/somefile", 755);   // decimal; probably incorrect
            chmod("/somedir/somefile", "u+rwx,go+rx"); // string; incorrect
            chmod("/somedir/somefile", 0755);  // octal; correct value of mode
            ?>

        mode 参数由三个八进制数组件组成，这些组件按顺序指定了对所有者、所有者所在的用户组以及其他所有人的访问限制。一个组件可以通过为目标用
        户群累加所需的权限来计算。数字 1 表示授予执行权限，数字 2 表示让文件可写，数组 4 表示让文件可读。把这些数字累加起来以指定所需的权限。
        在 Unix 系统上，你还可以通过“man 1 chmod”和“man 2 chmod”阅读更多关于模式的信息。
            <?php
            // Read and write for owner, nothing for everybody else
            chmod("/somedir/somefile", 0600);

            // Read and write for owner, read for everybody else
            chmod("/somedir/somefile", 0644);

            // Everything for owner, read and execute for others
            chmod("/somedir/somefile", 0755);

            // Everything for owner, read and execute for owner's group
            chmod("/somedir/somefile", 0750);
            ?>

返回值
    成功时返回 TRUE，失败时返回 FALSE 。

注意事项
    注意：当前用户是运行 PHP 的用户。它可能不是你用于常规 shell 或 FTP 访问的同一用户。在大多数系统中，权限只能由拥有该文件的用户更改。

    注意：此函数不能在 远程文件 上工作，因为要检查的文件必须可通过服务器的文件系统访问。

    注意：当启用了 安全模式 时，PHP 会检查被操作的文件或目录是否与正在被执行的脚本拥有相同的 UID（所有者）。另外，你不能设置 SUID，SGID 和
    粘滞位。
