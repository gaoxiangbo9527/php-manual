描述
    fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = "," [, string $enclosure = '"' [, string $escape = "\\" ]]]] ) : array

    与 fgets() 类似，除了 fgetcsv() 解析它所读取的行以得到 CSV 格式的字段并返回一个包含所读取字段的数组。

    注意：该函数考虑了区域设置。例如，如果 LC_CTYPE 是 en_US.UTF-8 ，这个函数可能会错误的读取单字节编码的文件。

参数
    handle
        由 fopen()，popen() 或 fsockopen() 成功打开的一个有效的文件指针。
    length
        必须大于 CSV 文件（允许尾随行结束字符）中找到的最长行（以字符为单位）。否则，行被分割成多个长度为 length 的字符块，除非分割会发生在
        一个封闭中。

        省略这个参数（或在 PHP 5.1.0 或更高版本中将其设置为 0）就不会限制最大的行长，这会稍微慢一点。
    delimiter
        设置了字段分隔符（仅一个字符）的可选的 delimiter 参数。
    enclosure
        设置了字段包围字符（仅一个字符）的可选的 enclosure 参数。
    escape
        设置了转义字符（最多一个字符）的可选的 escape 参数。一个空字符串（""）会禁用专属的转义机制。

        注意：通常会在字段内通过将包围字符加倍来进行转义；然而，该转义字符可以用作一种替代。因此对于默认的参数来说，值 "" 和 \" 的含义是一
        样的。除允许转义包围字符外，该转义字符没有特殊意义；它甚至不是打算用来转义自身的。

返回值
    返回一个包含有读取到的字段的索引数组。

    注意：一个 CSV 文件中的空行将以一个由单个 null 字段组成的数组返回，不会被视为一种错误。

    注意：如果 PHP 在读取 Macintosh 计算机上或由 Macintosh 计算机创建的文件时不能正确识别行结束符，启用 auto_detect_line_ending 运行
    时配置选项可能有助于解决这个问题。

    如果提供了一个无效的 handle ，fgetcsv() 返回 NULL，遇到其他错误则返回 FALSE ，包括遇到文件结束。

更新日志
    版本	    描述
    7.4.0	escape 参数现在也接受一个空字符串以禁用专有的转义机制。
    5.3.0	添加了 escape 参数。
    5.1.0	length 现在是可选的。默认是 0，意味着没有长度限制。
