描述
    stat ( string $filename ) : array

    收集由 filename 命名的文件的统计信息。如果 filename 是一个符号链接，那么统计信息来自于文件自身，而不是符号链接。在 PHP 7.4.0 之前，
    在这种情况下，Windows NTS 构建的 size、atime、mtime 和 ctime 统计数据都来自符号链接。

    lstat() 与 stat() 相同，除了它基于符号链接的状态。

参数
    filename
        文件的路径。

返回值
    stat() 和 fstat() 结果格式
    数字的   关联的	    描述
    0	    dev	        设备号 ***
    1	    ino	        inode 号 ****
    2	    mode	    inode 保护模式
    3	    nlink	    链接数
    4	    uid	        所有者的用户 ID *
    5	    gid	        所有者的组 ID *
    6	    rdev	    设备类型，如果是 inode 设备
    7	    size	    字节大小
    8	    atime	    最后访问的时间（Unix 时间戳）
    9	    mtime	    最后更改的时间（Unix 时间戳）
    10	    ctime	    最后 inode 更改的时间（Unix 时间戳）
    11	    blksize	    文件系统 IO 的块大小 **
    12	    blocks	    分配的 512 字节块的数目 **

    * 在 Windows 上，这个值总是 0 。

    ** 仅在支持 st_blksize 类型的系统上有效，其他系统（例如 Windows）返回 -1 。

    *** 在 Windows 上，从 PHP 7.4.0 开始，这是包含文件的卷的序列号，它是一个 64 位无符号整数，因此可能会溢出。以前，对于 stat() 它是驱
    动器号的数字表示（例如，对于 C: 是 2），并且对于 lstat()，它是 0。

    **** 在 Windows 上，从 PHP 7.4.0 开始，这是与文件相关联的标识符，它是一个 64 位无符号整数，因此可能会溢出。以前，它总是 0。

    mode 的值包含多个函数会读取的信息。当以八进制形式写入时，chmod() 从右开始返回前三位数字。下一位数字将被 PHP 忽略。接下来两位数字表示文
    件类型：

    mode 文件类型
        八进制 mode	    含义
        0120000	        链接
        0100000	        常规文件
        0060000	        块设备
        0040000	        目录
        0010000	        fifo

    因此，例如，一个常规文件可以是 0100644，一个目录可以是 0040755 。

    如果出现错误，stat() 将返回 FALSE 。

    注意：因为 PHP 的整数类型是有符号的，而且许多平台使用 32 位整数，所以一些文件系统函数可能会为大于 2GB 的文件返回意外的结果。

错误/异常
    失败时，产生一个 E_WARNING 。

更新日志
    版本	    描述
    7.4.0	在 Windows 上，设备号现在是包含该文件的卷的序列号，inode 号是与该文件关联的标识符。
    7.4.0	符号链接的 size、atime、mtime 和 ctime 统计信息始终是目标链接的。以前 Windows 上的 NTS 构建不是这样的。

注意事项
    注意：注意，时间解析可能因文件系统的不同而不同。

    注意：这个函数的结果是被缓存的。更多细节请参见 clearstatcache() 。

    提示 从 PHP 5.0.0 开始，这个函数还可以与一些 URL 包装器一起使用。请参考 支持的协议和包装器 ，以确定哪些包装器支持 stat() 系列的功能。
