设置哪些 PHP 错误会被报告。

描述
    error_reporting ([ int $level ] ) : int
    error_reporting() 函数能在运行时设置 error_reporting 指令。
    PHP 有许多错误级别，使用这个函数可以为脚本的持续期间（运行时)设置该级别。
    如果没有设置可选的 level ，error_reporting() 会返回当前的错误报告级别。

参数
    level
        新的错误报告级别。它接受一个位掩码或者命名的常量。
        强烈鼓励使用命名常量从而保证兼容将来的版本。因为随着增加新的错误级别，整数的范围也会增大，旧的基于整数的错误级别并不总是能如预期的那样表现。
返回值
    如果没有给出 level 参数，返回当前的错误报告级别。
    如果给出了 level 参数，返回旧的错误报告级别。

注意
    警告 大多数 E_STRICT 错误是在编译时被评测的，因此即使在某个（代码）文件中 error_reporting 被增强为包含 E_STRICT ，这类错误也不会在该文件
    中报告（反之亦然）。
    （个人补充）因为当 PHP 执行到设置 error_reporting 的地方（不论是通过 int_set('error_reporting', ...) 还是 error_reporting() ）
    时，已经到运行时了，那些早于运行时产生的错误已经发生和被处理了，就比如 E_STRICT 错误。

    提示 传入值 -1 将显示所有可能的错误，即使在将来的 PHP 中加入的新的错误级别和常量也没问题。 从 PHP 5.4 开始，E_ALL 常量也有这样的行为。
    （个人补充）不论 PHP 如何增加新的错误级别和常量，PHP 肯定会遵从位掩码的本质，所以 -1 确实可以保证永远显示所有可能的错误，但是 -1 毕竟是魔数，
    所以既然 E_ALL 将来也会有同样的行为，还是用 E_ALL 吧。

