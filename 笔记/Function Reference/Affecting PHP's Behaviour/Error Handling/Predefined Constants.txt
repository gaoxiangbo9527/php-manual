下列常量作为 PHP 核心的一部分总是可用的。

注意：你可以在 php.ini 中使用这些常量名，但在 PHP 之外则不行，比如在 httpd.conf 中，在那里你应当使用位掩码值来代替这些常量名。

错误和日志记录
    值      常量                     说明
    1       E_ERROR                 致命的运行时错误。它们表示无法从中恢复的错误，例如内存分配问题。脚本的执行会终止。
    2       E_WARING                运行时警告（非致命的错误）。脚本的执行不会终止。
    4       E_PARSE                 编译时解析错误。解析错误应当只会由解析器生成。
    8       E_NOTICE                运行时通知。表示脚本遇到一些可能预示着错误的东西，但在运行脚本的正常过程中也可能会发生这种情况。
    16      E_CORE_ERROR            在 PHP 的初始启动期间发生的致命错误。它类似于 E_ERROR，区别在于它是由 PHP 核心产生的。
    32      E_CORE_WARNING          在 PHP 的初始启动期间发生的警告（非致命的错误）。它类似于 E_WARNING，区别在于它是由 PHP 核心产生的。
    64      E_COMPILE_ERROR         致命的编译错误，它类似于 E_ERROR，区别在于它是由 Zend 脚本引擎产生的。
    128     E_COMPILE_WARNING       编译警告（非致命的错误）。它类似于 E_WARNING，区别在于它是由 Zend 脚本引擎产生的。
    256     E_USER_ERROR            用户生成的错误消息。它类似于E_ERROR，区别在于它是通过在 PHP 代码中调用trigger_error()函数产生的。
    512     E_USER_WARNING          用户生成的警告消息。它类似于E_WARNING区别在于它是通过在 PHP 代码中调用trigger_error()函数产生的。
    1024    E_USER_NOTICE           用户生成的通知消息。它类似于E_NOTICE，区别在于它是通过在 PHP 代码中调用trigger_error()函数产生的。
    2048    E_STRICT                启用 PHP 对代码的修改建议，以确保代码具有最佳的互操作性和向前兼容性。
    4096    E_RECOVERABLE_ERROR     可捕获的致命错误。它表示发生了一个可能非常危险的错误，但还没有导致引擎进入到不稳定的状态。
                                    如果该错误没有被用户自定义的错误处理程序（参见 set_error_handler()）捕获，应用程序会当它为 E_ERROR
                                    从而中止运行。
    8192    E_DEPRECATED            运行时通知。启用它就会对在未来版本中可能无法工作的代码给出警告。
    16384   E_USER_DEPRECATED       用户生成的警告消息。它类似于 E_DEPRECATED，区别在于它是通过在 PHP 代码中调用 trigger_error() 函数
                                    产生的。
    32767   E_ALL                   所有的错误和警告。

上面的值（不论是数字化的还是符号化的）常常用于构建一个指定了要报告哪些错误的位掩码。你可以使用位运算符来组合这些值或者屏蔽某些类型的错误。
请注意，在 php.ini 之中只有 '|', '~', '!', '^' 和 '&' 能够被理解。
