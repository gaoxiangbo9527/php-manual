描述
    strtotime ( string $time [, int $now = time() ] ) : int

    该函数希望得到一个包含了一种英文日期格式的字符串并且尝试将该格式解析成一个 Unix 时间戳（自 January 1 1970 00:00:00 UTC 以来的秒数）
    ，相对于通过 now 指定的时间戳，或者如果没有提供 now 的话会相对于当前时间。

    该函数的每一个参数都会使用默认的时区，除非在参数中指定了一个时区。注意不要在每个参数中使用不同的时区，除非有意这样做。有关定义默认时区的
    各种方法，请参见 date_default_timezone_get() 。

参数
    time
        一个日期/时间字符串。时间和日期格式 中解释了有效的格式。
    now
        作为计算相对日期的基础的时间戳。

返回值
    成功时返回一个时间戳，否则返回 FALSE 。在 PHP 5.1.0 以前，该函数在失败时会返回 -1 。

错误/异常
    如果时区是无效的，那么每一个对日期/时间函数的调用将会生成一个 E_NOTICE ，如果使用系统设置或者 TZ 环境变量，且/或生成一个 E_STRICT 或
    E_WARNING 消息，另请参阅 date_default_timezone_set() 。

变更日志
    版本         描述
    5.3.0	    在 PHP 5.3.0 之前，提供给 strtotime() 的 time 参数的相对时间格式，例如 this week，previous week，last week 和
                next week 被解释为相对于当前日期/时间的一个 7 天周期，而不是从周一到周日的一周时间。
    5.3.0	    在 PHP 5.3.0 之前，24:00 不是一种有效的格式并且 strtotime() 会返回 FALSE 。
    5.2.7	    在 5.2.7 之前的 PHP 5 中，请求一个月中的一个给定的工作日的事件，而该工作日是该月的第一天，将会错误地添加一个星期到返回的
                时间戳中。这在 5.2.7 及以后的版本中得到了修复。
    5.1.0	    现在失败会返回 FALSE ，而不是 -1 。
    5.1.0       现在会产生 E_STRICT 和 E_NOTICE 时区错误。
    5.0.2	    在 PHP 5 到 5.0.2 版本中，“now”和其他相对时间是错误地从今天的午夜计算出来的。这不同于正确的从当前时间计算的其他版本。
    5.0.0	    开始允许微秒，但是它们会被忽略。

注意事项
    注意：如果年份以两位数格式指定，那么 00-69 之间的值会被映射到 2000-2069 并且 70-99 会被映射到 1970-1999。查看下面的注释，了解 32
    位系统可能的差异（可能的日期可能在 2038-01-19 03:14:07 结束）。

    注意：
        时间戳的有效范围通常是从 Fri, 13 Dec 1901 20:45:54 UTC 到 Tue, 19 Jan 2038 03:14:07 UTC 。（这些日期对应于 32 位有符号
        整数的最小值和最大值。）

        在 PHP 5.1.0 之前，并非所有平台都支持负时间戳，因此你的日期范围可能被限制在不早于 Unix 纪元。这意味着，1970 年 1 月 1 日之前的
        日期在 Windows、一些 Linux 发行版和其他一些操作系统上无法工作。对于 64 位版本的 PHP，时间戳的有效范围实际上是无限的，因为 64 位
        在任何方向上都可以表示大约 2930 亿年。

    注意：
        通过查看不同组件之间的分隔符，可以消除 m/d/y 或 d-m-y 日期格式中的歧义：如果分隔符是一个斜线（/），那么会被假设为美国的 m/d/y；
        然而如果分隔符是一个虚线（-）或一个点（.），那么会被假设为欧洲的 d-m-y 格式。然而，如果年是以两位数字指定的并且分隔符是一个虚线（-）
        ，那么该日期字符串会按照 y-m-d 被解析。

        为了避免潜在的歧义，最好在可能的情况下使用 ISO 8601（YYYY-MM-DD）日期或 DateTime::createFromFormat() 。

    注意：使用这个函数进行数学运算是不明智的。最好是在 PHP 5.3 或更高版本中使用 DateTime::add() 和 DateTime::sub()，或者在 PHP 5.2
    中使用 DateTime::modify() 。
