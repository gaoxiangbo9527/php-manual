描述
    strftime ( string $format [, int $timestamp = time() ] ) : string

    根据本地设置格式化时间或者日期。月和工作日名称以及其他与语言相关的字符串会遵从通过 setlocale() 设置的当前区域。

    你的 C 库可能不支持所有的转换说明符，在这种情况下，PHP 的 strftime() 将不支持它们。此外，并非所有平台都支持负时间戳，因此你的日期范围
    可能被限制在不早于 Unix 纪元。这意味着 %e、%T、%R 和 %D（可能还有其他的）—— 以及 1970 年 1 月 1 日之前的日期 —— 将不能在 Windows、
    一些 Linux 发行版和一些其他操作系统上工作。对于 Windows 系统，支持的转换说明符的完整概述可以在 MSDN 中找到。

参数
    fotmat
        format 参数字符串中可以识别下面这些字符
        格式	    描述                                                        示例返回值
        天	    ---	                                                        ---
        %a      天的简短文本表示	                                            Sun 到 Sat
        %A	    天的完整文本表示	                                            Sunday 到 Saturday
        %d	    月中的天，2 位数字，带有前导 0                                  01 到 31
        %e	    月中的天，1 位数字，带有一个前导空格。      1 到 31
        	    有关更多信息，请参见下文。
        %j	    年中的天，3 位数字，带有前导 0                                  001 到 366
        %u	    周中的天，ISO-8601 数值化表示	                                1（周一） 到 7（周天）
        %w	    周中的天，数值化表示                                           0（周天） 到 6 （周六）
        周	    ---	                                                        ---
        %U	    指定年中的周号，以第一个星期日为第一个星期的开始	                13 （表示该年中第 13 个完整的周）
        %V	    ISO-8601:1988 指定年中的周号，从该年中第一个至少有四天的周开       01 到 53 （53 占有一个重叠的周）
                始，并且周一是周的开始。
        %W	    年中的周的一种数值化表示，使用第一个周一所在的周作为第一周           46（表示该年中第 46 个以周一开始的周）
        月	    ---	                                                        ---
        %b	    月份名称的缩写，基于地区                                        Jan 到 Dec
        %B	    完整的月份名称，基于地区	                                    January 到 December
        %h	    月份名称的缩写，基于地区（%b 的一个别名）	                        Jan 到 Dec
        %m	    月份的 2 位数字表示形式                                        01（1月） 到 12（12月）
        年	    ---	                                                        ---
        %C	    世纪的 2 位数字表示形式（年 除以 100，截断为一个整数）	            19 表示 20 世纪
        %g	    按 ISO-8601:1988 标准表示年份的 2 位数字（查看 %V）              示例：09 表示 January 6, 2009 所在周的年
        %G	    完整的 4 位数字版本的 %g                                       示例：2008 表示 January 3, 2009 所在周中的年
        %y	    2 位数字表示形式的年                                           示例：09 表示 2009, 79 表示 1979
        %Y	    4 位数字表示形式的年                                           示例：2038
        时间	    ---	                                                        ---
        %H	    2 位数字表示形式的小时，24 小时格式                              00 到 23
        %k	    24 小时格式的小时，在个位数前加空格	                             0 到 23
        %I	    2 位数字表示形式的小时，12 小时格式                              01 到 12
        %l      12 小时格式的小时，在个位数前加空格	                             1 到 12
        %M	    2 位数字表示形式的分钟                                          00 到 59
        %p	    大写的 'AM' 或 'PM'，基于给定的时间                             示例：AM 表示 00:31，PM 表示 22:23
        %P	    小写的 'am' 或 'pm'，基于给定的时间                             示例：am 表示 00:31，pm 表示 22:23
        %r	    等同于 "%I:%M:%S %p"	                                        示例：09:34:17 PM 表示 21:34:17
        %R	    等同于 "%H:%M"	                                            示例：00:35 表示 12:35 AM，16:44 表示 4:44 PM
        %S	    2 位数字表示形式的秒	                                        00 到 59
        %T	    等同于 "%H:%M:%S"	                                        示例：21:34:17 表示 09:34:17 PM
        %X	    基于地区的首选时间表示形式                                      示例：03:59:16 或 15:59:16
        %z	    时区偏移量。没有在 Windows 上实现。更多信息见下文。                示例：-0500 表示 US Eastern Time
        %Z	    时区缩写。没有在 Windows 上实现。更多信息见下文。	                示例：EST 表示 Eastern Time
        时间和日期的戳 ---	                                                ---
        %c	    基于地区的首选的日期和时间戳                                    示例：Tue Feb 5 00:45:10 2009 表示
                                                                            February 5, 2009 at 12:45:10 AM
        %D	    等同于 "%m/%d/%y"	                                        示例：02/05/09 表示 February 5, 2009
        %F	    等同于 "%Y-%m-%d"（常用于数据库的 datestamps 中）	            示例：2009-02-05 表示 February 5, 2009
        %s	    Unix 纪元时间戳（等于 time() 函数）                            示例：305815200 表示
                                                                            September 10, 1979 08:40:00 AM
        %x	    基于地区的首选的日期表示形式，不带时间                            示例：02/05/09 表示 February 5, 2009
        杂项     ---	                                                        ---
        %n      一个换行字符（\n）                                             ---
        %t	    一个制表符（\t）	                                            ---
        %%	    一个字面量百分号（%）	                                        ---

        该参数的最大长度是 1023 个字符。

        警告 与 ISO-9899:1999 相反，Sun Solaris 使用 1 表示开始的星期日。因此，%u 可能不会像手册中所描述的那样。

        警告 仅针对 Windows：
            此函数的 Windows 实现中不支持 %e 修饰符。要获取该值，可以使用 %#d 修饰符。下面的示例说明了如何编写跨平台兼容函数。
            %z 和 %Z 修饰符都返回时区名，而不是偏移量或缩写。

        警告 仅针对 macOS：此函数的 macOS 实现中不支持 %P 修饰符。
    timestamp
        可选的 timestamp 参数是一个整型的 Unix 时间戳，如果没有指定 timestamp ，那么它默认为当前的本地时间。换句话说，它默认为 time()
        的值。

返回值
    根据 format 返回一个格式化后的字符串，使用指定的 timestamp ，或者如果没有指定 timestamp 则使用当前的本地时间。月和工作日名称以及其他
    与语言相关的字符串会遵从通过 setlocale() 设置的当前区域。

错误/异常
    如果时区是无效的，那么每一个对日期/时间函数的调用将会生成一个 E_NOTICE ，如果使用系统设置或者 TZ 环境变量，且/或生成一个 E_STRICT 或
    E_WARNING 消息，另请参阅 date_default_timezone_set() 。

    因为输出依赖于底层的 C 库，所以不支持某些转换说明符。在 Windows 上，提供未知的转换说明符将导致 5 条 E_WARNING 消息并返回 FALSE 。在
    其他操作系统上，你可能不会收到任何 E_WARNING 消息，并且输出中可能会包含未转换的转换说明符。

变更日志
    版本     描述
    5.1.0   现在会产生 E_STRICT 和 E_NOTICE 时区错误。

注意事项
    注意：%G 和 %V，它们基于 ISO 8601:1988 的周号，如果编号系统没有被完全的理解，则可能会给出意外的结果（尽管是正确的）。参见本手册页中
    %V 的示例。
