一个完全安全的系统实际上是不可能的，因此在安全行业中一种常用的方法是平衡风险和可用性。如果由用户提交的每个变量都需要两种形式的生物特征验证（比
如视网膜扫描和指纹），那么你将有非常高的责任感。填写一个相当复杂的表单也将花费半个小时，这往往会鼓励用户去寻找绕过这种安全性的方法。

最好的安全性通常是不显眼的，足以满足需求却不会妨碍用户完成他们的工作，或者用过度的复杂性增加代码作者的负担。实际上，一些安全性攻击只是利用这种
过度构建的安全性，这种安全性会随着时间的推移而逐渐削弱。

值得记住的一句话：一个系统的好坏取决于链条中最薄弱的环节。如果所有事务都根据时间、位置、事务类型等进行了大量的日志记录，但仅根据单个 cookie
对用户进行验证，那么将用户绑定到事务日志的有效性将会被严重削弱。

在测试时，请记住，即使对最简单的页面，你也无法测试所有的可能性。你所期望的输入可能与一个不满的员工、一个有好几个月时间的黑客、或者一个在键盘上
走来走去的家猫所给出的输入完全无关。这也是为什么最好从一种逻辑的角度去看代码，去识别可能引入意外数据的位置，然后跟踪它是如何被修改、缩小或放大
的。

互联网上充满了试图通过破坏你的代码，崩溃你的网站，发布不合适的内容，或者让你的一天变得有趣来让自己出名的人。无论你的网站是大是小，只要它在线，
只要有一个可以连接到的服务器，你就会成为一个目标。许多破解程序不会去区分大小，而是会去搜寻大量的 IP 段以寻找受害者。尽量不要成为一名受害者。
