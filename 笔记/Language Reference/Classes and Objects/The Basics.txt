class
    有效的类名
        使用字母或者下划线开头，后面跟着任意数量的字母、数字和下划线，正则表达式表示为：
            ^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$
        不能为PHP保留字
    $this伪变量
        当一个方法从一个对象上下文中调用时（即被一个对象调用时），可以使用$this伪变量
        $this是调用对象的一份引用
        未完成，待补充
new
    除非某个对象定义了一个构造函数，并且该构造函数在遇到错误时抛出了一个异常，否者 new 总是会创建一个对象
    类应该在实例化之前被定义（某些情况下这是必须的）
    如果一个包含了某个类名的字符串被提供给 new 使用，则会创建该类的一个对象；如果该类处于某个命名空间下，则必须使用全限定名
    在类的上下文内，能够通过 new self 或者 new parent 来创建一个对象
    对象赋值，其实是值传递，但是传递的值是对象的地址（引用），所以最终新变量和原变量均指向同一个对象。这种行为同将对象传递给函数时是一样的
    PHP 5.3.0 引入了几种创建对象实例的新方法，如：
        class Test
        {
            static public function getNew()
            {
                return new static;
            }
        }

        class Child extends Test
        {}

        $obj1 = new Test();
        $obj2 = new $obj1;
        var_dump($obj1 !== $obj2);

        $obj3 = Test::getNew();
        var_dump($obj3 instanceof Test);

        $obj4 = Child::getNew();
        var_dump($obj4 instanceof Child);
    PHP 5.4.0 引入了在单个表达式中创建对象并访问其某个成员的能力，如：
        echo (new DateTime())->format('Y');
Properties and methods
