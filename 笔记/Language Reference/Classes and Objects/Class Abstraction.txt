PHP 5 引入了抽象类和抽象方法。

抽象类不能被实例化。

任何一个类，只要它里面有一个方法是抽象方法，这个类就必须被声明为抽象类。
（个人补充）抽象类中可以包含非抽象方法，甚至可以一个抽象方法都没有。

抽象方法只能声明方法签名，不能定义具体的功能实现（即没有花括号部分）。

当继承一个抽象类时，子类必须定义所有在父类中标记为抽象的方法（可以继续抽象，当然也可以实现），
另外，这些方法的可见性必须和父类一样（或者更为宽松）；
此外，方法的签名必须匹配，比如类型提示和必选参数的数量必须一致，这也适用于PHP 5.4 起的（抽象）构造方法，PHP 5.4 之前的构造方法声明可以不一样的。
（个人补充）方法签名不用完全匹配，兼容即可，比如可以增加可选参数。

（个人补充）抽象方法前必须加 abstract 关键字。
