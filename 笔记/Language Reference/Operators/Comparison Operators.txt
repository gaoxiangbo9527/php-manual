比较操作符，正如它们的名字所暗示的，允许你去比较两个值。你可能还会对查看 类型比较表 感兴趣，它们展示了和各种类型相关的比较的例子。

比较操作符
    示例	        名称	        Result
    $a == $b	等于	        如果在类型欺骗之后，$a 等于 $b ，则为 TRUE 。
    $a === $b	全等	        如果 $a 等于 $b 并且它们的类型相同，则为 TRUE 。
    $a != $b	不等于	    如果在类型欺骗之后，$a 不等于 $b，则为 TRUE 。
    $a <> $b	不等于	    如果在类型欺骗之后，$a 不等于 $b，则为 TRUE 。
    $a !== $b	不全等	    如果 $a 不等于 $b ，或者它们的类型不相同，则返回 TRUE 。
    $a < $b	    小于	        如果 $a 严格的小于 $b ，则为 TRUE 。
    $a > $b	    大于	        如果 $a 严格的大于 $b ，则为 TRUE 。
    $a <= $b	小于或等于	如果 $a 小于或者等于 $b ，则为 TRUE 。
    $a >= $b	大于或等于	如果 $a 大于或者等于 $b ，则为 TRUE 。
    $a <=> $b	太空船	    当 $a 分别小于、等于或大于 $b 时，分别为一个小于、等于或大于零的整数（-1，0，1）。从 PHP 7 开始可用。
个人补充：<=> 操作符明显适用于那些排序函数。

如果比较一个数字和一个字符串，或者比较涉及到数值化的字符串，则每个字符串都会转换为数值，比较以数值的方式执行。这种规则也会应用于 switch 语
句。当比较是 === 或者 !== 时不会发生类型转换，因为这涉及到比较类型以及值。

对于不同的类型，比较是按照下面的表格（按顺序）进行的。

比较不同的类型
    操作数 1 的类型     操作数 2 的类型         结果
    null 或 字符串      字符串	            将 NULL 转换为 ""，然后进行数值化或者词典比较
    布尔 或 null	       任何类型	            两侧均转换为布尔值，然后 FALSE < TRUE
    对象	               对象	                内置的类可以定义它们自己的比较，不同的类是不可以比较的，相同的类请查看 对象比较 。
    字符串，资源或数值    字符串，资源或数值      将字符串和资源转换为数值，通常是数学运算
    数组	               数组	                带有更少成员的数组更小，如果来自操作数 1 的键没有在操作数 2 中发现，那么这两个数组是不能
                                            比较的，否则 —— 按值比较。
    对象	               任何类型	            对象总是更大
    数组	               任何类型	            数组总是更大

警告
    比较浮点数
        由于浮点数的内部表示方式，所以你不应该测试两个浮点数是否相等。更多信息请参阅 浮点数 的文档。

三元操作符
    另外一个条件操作符是“?:”（或三元）操作符。

    如果表达式 expr1 求值为 TRUE ，那么表达式 (expr1) ? (expr2) : (expr3) 将求值为 expr2 ；如果表达式 expr1 求值为 FALSE ，那么
    将求值为 expr3 。从 PHP 5.3 开始，能够留空三元操作符的中间部分。如果表达式 expr1 求值为 TRUE ，那么表达式 expr1 ?: expr3 将求值
    为 expr1 ，否则将求值为 expr3 。

    注意：请注意三元操作符是一个表达式，并且它不会求值为一个变量，而是求值为一个表达式的结果。如果你想要按引用返回一个变量，这是非常重要的。
    在一个按引用返回的函数中 return $var == 42 ? $a : $b; 语句将不会正常工作并且会产生一个警告。

    注意：建议避免“叠加”三元表达式。当在一条语句中使用多个三元操作符时，PHP 的行为是不明显的。

空合并操作符
    进一步存在“??”（空合并）操作符，从 PHP 7 开始可用。

    如果 expr1 是 NULL ，那么表达式 (expr1) ?? (expr2) 将求值为 expr2 ，否则将求值为 expr1 。特别是，如果左侧值不存在，这个操作符不
    会发出一个通知，就像 isset() 一样。这在数组的键上特别有用。

    注意：请注意空合并操作符是一个表达式，并且它不会求值为一个变量，而是求值为一个表达式的结果。如果你想要按引用返回一个变量，这是非常重要的。
    在一个按引用返回的函数中 return $foo ?? $bar; 语句将不会正常工作并且会产生一个警告。

    注意：请注意空合并操作符允许简单的嵌套。
