PHP 中每个字符等同于一个字节。
PHP 只支持一个 256 的字符集，并不支持原生的 Unicode 字符集。

PHP 7.0.0 以前
    32位
        长度最大为 2GB
    64位
        长度最大为 2GB
PHP 7.0.0 以后
    32位
        长度最大为 2GB
    64位
        长度无限制

语法
    字符串字面量表示法：
        单引号
        双引号
        heredoc
        nowdoc      >= PHP 5.3.0
    单引号
        支持的转义字符只有两个：
            \'  转义为 '
            \\  转义为 \
        其它任何方式的反斜线都会被当成反斜线本身。

        单引号表示法不会解析变量。
    双引号
        支持的转义字符：
            \n
            \r
            \t
            \v
            \e                      >= PHP 5.4.4
            \f
            \$
            \"
            \\
            \[0-7]{1,3}             8进制数值对应的 ascii 字符；表示的数值如果超过256，会截取后8为，返回截取后的数值对应值的 ascii 字符
            \x[0-9a-fA-F]{1,2}      16进制数值对应的 ascii 字符
            \u{[0-9a-fA-F]+}        16进制数值对应的 UTF-8 字符（>= PHP 7.0.0）
        其它任何方式的反斜线都会被当成反斜线本身。

        双引号表示法会解析变量。
    Nowdoc
        不支持任何解析，即没有转义字符，也不会解析变量。

        很适合用于嵌入 PHP 代码或其它大段无需对其中的特殊字符进行转义的文本。

        和 Heredoc 表示法一样使用 <<< 开头，然后紧跟着一个标识符，但是 Nowdoc 的标识符需要用单引号包围，例如：<<<'identifier'
        Heredoc 结构的所有规则也同样适用于 Nowdoc 结构，尤其是结束标识符的规则。

        PHP 5.3.0 开始支持 Nowdoc 。
    Heredoc
        表示法：
            使用 <<< 开头，然后是（开始）标识符，然后是换行符，然后是字符串内容，然后是换行符，然后是（结束）标识符（名字和起始标识符相同），然后
            是一个分号（有时不需要），然后是一个换行符。
            这里说的换行符，是指操作系统所使用的换行符，并不单指 \n 。

        从 PHP 5.3.0 开始，Heredoc 表示法的开始标识符可以使用双引号包围（这么做估计是为了和 Nowdoc 相呼应）。
        标识符的命名规则同其它的 PHP 标签一样：只能包含字母、数字和下划线，并且必须以字母和下划线作为开头。

        结束标识符必须是该行的第一列（即结束标识符前必须是一个换行符）。
        结束标识符后可以紧跟一个分号（有时不需要），然后必须是一个换行符。
        如果不遵守上述规则，会导致结束标识不“干净”，PHP 将认为它不是结束标识符而继续向下寻找。
        如果在文件结束前也没有找到一个正确的结束标识符，PHP 将会在最后一行产生一个解析错误。

        Heredoc 支持双引号表示法中除了 \" 以外的所有转义字符串，因为双引号在 Heredoc 中不再需要被转义了。

        Heredoc 支持解析变量。

        从 PHP 5.3.0 开始，可以用 Heredoc 表示法来初始化静态变量和类的属性和常量：但 Heredoc 表示法中不能包含变量解析。
    变量解析
        简单语法

        复杂语法


