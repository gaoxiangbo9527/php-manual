PHP 在变量声明中不需要（或者说不支持）显式的类型定义；一个变量的类型是由使用该变量的上下文决定的。也就是说，如果一个字符串值赋值给了变量
$var，$var 就会成为一个字符串。如果一个整数值赋值给了 $var，那么 $var 就会成为一个整型。

PHP 的自动类型转换的一个例子是乘法操作符 * 。如果任何一个操作数是浮点数，那么两个操作数都会被当做浮点数求值，并且结果也将是一个浮点数。
否者的话，操作数会被解释成整数，并且结果也将是一个整数。注意这不会改变操作数自身的类型；仅会改变操作数被求值的方式以及表达式自身的类型。

要想强制一个变量按照某个特定的类型求值，请查看 类型强制转换 部分。为了改变一个变量的类型，请查看 settype() 函数。

注意
    目前并没有定义自动转换为数组的行为。
    另外，由于 PHP 支持使用与数组索引相同的语法去通过偏移量索引字符串，因此下面的示例适用于所有 PHP 版本:
        <?php
        $a    = 'car'; // $a is a string
        $a[0] = 'b';   // $a is still a string
        echo $a;       // bar
    更多信息请参见标题为 按字符访问字符串 的章节。

类型强制转换
    类型强制转换在 PHP 和 C 中工作起来非常像：期望的类型名写在将要被强制转换的变量前面的圆括号中。

    允许的强制转换有：
        (int), (integer)            强制转换为整型
        (bool), (boolean)           强制转换为布尔型
        (float), (double), (real)   强制转换为浮点型
        (string)                    强制转换为字符串
        (array)                     强制转换为数组
        (object)                    强制转换为对象
        (unset)                     强制转换为 NULL

    在 PHP 5.2.1 中增加了 (binary) 强制转换和 b 前缀的支持。注意，(binary) 强制转换与 (string) 一样重要，但不应该依赖它。

    从 PHP 7.2.0 开始 (unset) 强制转换已经被废弃。注意，(unset) 强制转换和将 NULL 值赋给变量或者调用是相同的。
    从 PHP 8.0.0 开始 (unset) 强制转换将会被移除。

    注意在圆括号内允许使用制表符和空格，因此下面是功能上等价的：
        <?php
        $foo = (int) $bar;
        $foo = ( int ) $bar;
    个人补充：PSR 中有提到过不要加空格。

    注意：除了将一个变量强制转换成一个字符串，也可以将变量括进双引号中。


