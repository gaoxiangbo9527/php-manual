Iterable 是 PHP 7.1 引入的 伪类型。
它可以接受任何数组或者实现了 Traversable 接口的对象；它们都可以使用 foreach 进行遍历，也能够在 生成器 内部同 yield from 一同使用。

使用 Iterable
    iterable 可以用于参数类型（提示），此时它表明函数需要一个值的集合，但是却不在乎这些值的形式；
    此时，如果传入的值不是一个数组或者 Traversable 的实例，就会生成一个 TypeError 错误。

    声明为 iterable 类型的参数（只）可以使用 NULL 或者 一个数组 作为默认值。

    iterable 也可以用做返回类型，用于指示函数会返回一个可遍历的值；
    如果此时返回值不是一个数组或者 Traversable 的实例，则会生成 TypeError 错误。

    将 iterable 声明为返回类型的函数也可以（可能）是一个 生成器。
    个人补充：那是因为 Generator 现实了 Iterator 接口，而 Iterator 接口是继承自 Traversable 接口。

Iterable 类型的变种
    类的继承/实现可以（可能）：
        在方法中使用 iterator 去放宽 array 或 Traversable 类型的参数。
        在方法中使用 array 或 Traversable 去收窄 iterable 类型的参数。
