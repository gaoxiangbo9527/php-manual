匿名函数，也被称为闭包，允许创建没有指定名称的函数。它们作为回调参数的值时最有用，但是它们也有很多其他的用途。

匿名函数是使用 Closure 类实现的。
（个人补充，所以匿名函数实际上是一个 Closure 类的实例）

闭包也能用作变量的值。PHP 自动的将这样的表达式转换为内部类 Closure 的实例。
将闭包赋值给一个变量使用同其他任意的赋值语句一样的语法，要包含结尾的分号。

闭包还可以从父作用域继承变量。所有这样的变量必须使用 use 语言结构传递。
从 PHP 7.1 起，这些变量一定不能包括超全局变量和 $this ，也不能是与参数同名的变量。
来自示例
    继承的变量的值来自于定义匿名函数时，而不是调用匿名函数时。
    在匿名函数定义之后
        按值传递的继承变量的改变不会影响父作用域中的变量，父作用域中变量的改变也不会影响继承变量。
        按引用传递的继承变量则会互相影响。
    匿名函数也能接受常规的参数。

从父作用域继承变量与使用全局变量是不同的。全局变量存在于全局作用域中，无论正在执行什么函数，全局变量都是相同的。
闭包的父作用域是声明闭包时所在的函数（不一定是调用闭包的函数）
