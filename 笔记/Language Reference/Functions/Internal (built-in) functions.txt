PHP 具有许多函数和结构。

在每个版本的 PHP 中都包含有许多核心函数，比如字符串函数和变量函数。

有一些函数需要特定的扩展被编译进 PHP，否则会出现致命的“未定义的函数”错误。
举例来说，为了使用图像函数，比如 imagecreatetruecolor()，PHP 必须被编译去带有 GD 支持。
或者，为了使用 mysqli_connect()，PHP 必须被编译去带有 MySQLi 支持。
一个 phpinfo() 调用或者 get_loaded_extensions() 调用会显示哪些扩展被加载到了 PHP 中。
还要注意的是许多扩展是默认情况下就启用的并且 PHP 手册也是按扩展分开的。
有关如何设置 PHP 的信息，请参阅配置、安装和各个扩展章节。

在手册中标题为“如何阅读函数定义”的一节中解释了如何阅读和理解函数的原型。
理解一个函数会返回什么以及是否函数会直接作用于传入的值是非常重要的。
举例来说， str_replace() 会返回修改后的字符串，然而 usort() 则会作用于实际传入的变量本身。
每个手册页还为每一个函数提供了特定的信息，比如关于函数参数、行为变化、成功和失败时的返回值的信息以及可用性信息。
了解这些重要的（且往往是细微的）差异对于编写正确的 PHP 代码至关重要。

注意：如果给函数的参数不是它所期望的，比如在期待一个字符串的地方传递了一个数组，那么函数的返回值是未定义的。在这种情况下，它很可能返回 NULL，
但这只是一个惯例，而且不能依赖。
