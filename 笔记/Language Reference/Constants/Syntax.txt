通过使用 define() 函数或者从 PHP 5.3.0 开始通过在一个类定义之外使用 const 关键字，你就能定义一个常量。虽然 define() 允许将常量定义为任
意表达式，然而 const 关键字有如下一段中所述的限制。一旦常量被定义，那么就不能更改其值或者取消定义。

当使用 const 关键字，在 PHP 5.6.0 以前，只有标量数据（布尔型、整型、浮点型和字符串）能够被包含进常量。从 PHP 5.6.0 开始，可以将常量定义为
一个标量表达式，并且能够定义为一个数组。能够将常量定义为一个资源，但是应该避免这么做，因为这能导致不期望的结果。

使用常量的名字就可以取得其值，与变量不同，不应该在常量名前面加上 $ 符号。你也可以用 constant() 函数去读取一个常量的值，不过一般只在需要动态
的获取常量名时才使用这种方法。使用 get_defined_constants() 可以获取所有已经定义的常量。

注意：常量和（全局）变量存在于不同的名称空间中。这意味着，例如 TRUE 和 $TRUE 通常是不同的。

如果你使用一个未定义的常量，PHP 假设你指的是常量本身的名称，就像你把它当做字符串一样（CONSTANT 对比 "CONSTANT"）。这个回退从 PHP 7.2.0
开始被废弃了，并且当它发生时会产生一个 E_WARNING 级别的错误（以前，会产生一个 E_NOTICE 级别的错误）。这不适用于全限定的常量，如果没有定义
则会抛出一个致命错误。如果你只是想检查是否设置了某个常量，使用 defined() 函数。

常量和变量有以下不同：
    常量前没有 $ 符号；
    在 PHP 5.3 以前，常量只能使用 define() 函数定义，不能通过简单的赋值定义；
    常量可以在任何地方被定义和访问，不用管变量的作用域规则；
    一但被定义，常量就不能被重新定义或者取消定义；
    常量只可以求值为标量值。从 PHP 5.6 开始，可以使用 const 关键字定义数组常量；且从 PHP 7.0 开始可以使用 define() 函数定义数组常量，
    你也可以在常量标量表达式中使用数组（例如，const FOO = array(1,2,3)[0];），但是最终结果必须是允许类型的值。

来自示例
    const ANIMALS = array('dog', 'cat', 'bird');
    echo ANIMALS[1];

注意：和使用 define() 定义常量相反，使用 const 关键字定义的常量必须声明在顶级作用域中，因为它们是在编译时被定义的；这也就意味着它们不能在函
数内，循环内、 if 语句内或者 try/catch 块内被定义。

注意：使用 const 关键字定义的常量总是大小写敏感的，然而使用 define() 定义的常量可以是大小写不敏感的。

另请参阅 类常量 。

个人补充：常量应该也可以被赋值为 NULL ，但这么做没什么实际意义。
