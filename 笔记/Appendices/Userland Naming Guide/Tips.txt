为了编写能经受住时间考验的代码，建议你不要在全局命名空间中放置过多的变量、函数或者类。这么做会防止同第三方代码或将来可能加入到语言中的名称之间
发生冲突。

防止函数和类命名冲突的一种常见方法是将它们添加到自己专用的命名空间中。
这仍然需要你保持留意已经被使用的命名空间，但是一旦你决定了要使用的命名空间，你就能向其中加入所有的函数和类而不用再担心还会冲突。

为了防止和第三方代码发生命名冲突，限制添加到全局命名空间中的变量的数量被认为是最佳实践。

注意：变量的作用域
    由于 PHP 的作用域规则，在函数和方法内部定义的变量不在全局作用域中，因此不会和全局作用域中定义的其他变量冲突。
